Q) What timezone range are you in:

A) UTC plus 7 or more
B) UTC +3 to UTC +6
C) UTC -2 to UTC +2
D) UTC -8 to UTC -3
E) UTC minus more than 8

Q) Given:

var b = (byte)126;
outer:
for (var n = 1000; n < 1002; n++) {
  for (var j = 4; j >= 0; j--, b++) {
    if (j < 3) break;
    else if (n == 1001) continue outer;
    b++;
  }
}
System.out.printf("b = %d\n", b);

What is the output
A) b = 129
B) b = 130
C) b = -126
D) b = -128
E) an exception is thrown

Q) Given:
class RCToy {
  private static int count = 0;
  private int age;

  public RCToy() {
    //super();
    count++;
  }

  public RCToy(int age) {
    this();
    this.age = age;
    System.out.println(this);
  }

  @Override
  public String toString() {
    return "RCToy for age " + age + ", count " + count;
  }
}

and:
class Robot extends RCToy implements Serializable {
  private int weaponCount;
  // transient int extra;

  public Robot(int weaponCount) {
    super(weaponCount == 0 ? 3 : 10);
    this.weaponCount = weaponCount;
    System.out.println(this);
  }

  @Override
  public String toString() {
    return super.toString() + " a Robot with weaponcount = " + weaponCount;
  }
}

Given an attempt to create and serialize a Robot like this:
    Robot r = new Robot(3);
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    try (ObjectOutputStream oos = new ObjectOutputStream(baos)) {
      oos.writeObject(r);
    } catch (IOException ioe) {
      System.out.println("write failed");
    }

What will be output by this code:
    try (ObjectInputStream ois = new ObjectInputStream(
        new ByteArrayInputStream(baos.toByteArray()))) {
      Object obj = ois.readObject();
      System.out.println(obj);
    } catch (Exception ioe) {
      System.out.println("read failed");
    }

A) RCToy for age 0, count 2 a Robot with weaponcount = 0
   RCToy for age 0, count 2 a Robot with weaponcount = 3
   RCToy for age 0, count 2 a Robot with weaponcount = 3
B) RCToy for age 0, count 1 a Robot with weaponcount = 0
   RCToy for age 0, count 1 a Robot with weaponcount = 3
C) RCToy for age 0, count 1 a Robot with weaponcount = 3
   RCToy for age 0, count 1 a Robot with weaponcount = 3
D) RCToy for age 0, count 2 a Robot with weaponcount = 3
E) Compilation fails
F) An exception is thrown during serialization
G) An exception is thrown during deserialization

Q)Given:

    String message = """Hello
            Java 17 World!""";
    System.out.println(message + "XXX");

What is the result?
A)
Hello
Java 17 World!XXX
B)
Hello
    Java 17 World!XXX
C)
Hello
Java 17 World!
XXX
D)
    Hello
        Java 17 World!
XXX
E) Compilation fails

Q)Given:

    String message = """
        Hello
            Java 17 World!""";
    System.out.println(message + "XXX");

What is the result?
A)
Hello
Java 17 World!XXX
B)
Hello
    Java 17 World!XXX
C)
Hello
Java 17 World!
XXX
D)
    Hello
        Java 17 World!
XXX
E) Compilation fails

Q) Given:
    int x = -1;
    System.out.println(x & 5);

What is the result?
A) Compilation fails
B) Exception at runtime
C) -1
D) 0x00000005
E) 5

Q)
Given:
class X {
  private static int count = 22;
  public static boolean getValue() {
    count++;
    return true;
  }
  public static void main(String...args) {
    boolean b1 = false;
    if (!b1 & getValue()) {
      System.out.println(count);
    } else {
      System.out.println("No " + count);
    }
  }
}

What is the result:
A) Compilation fails
B) No 22
C) No 23
D) 22
E) 23

Q) Which print "true"
A) String s = "Hello";
   String t = "He";
   t += "llo";
   sout(s == t);

B) String s = "Hello";
   String t = "He";
   t += "llo";
   sout(s.equals(t));

C) StringBuilder s = new StringBuilder("Hello");
   StringBuilder t = new StringBuilder("He");
   t.append("llo");
   sout(s.equals(t));

D) List<String> ls = List.of("Fred", "Jim");
   List<String> ls2 = new ArrayList<>(ls);
   sout(ls.equals(ls2));

E) LocalDate ld = LocalDate.of(2021, 3, 29);
   LocalDate ld2 = LocalDate.of(2021, 3, 29);
   sout(ld.equals(ld2));

Q) Which print true?
Iterable<String> is = List.of("a", "b", "c");
Object obj = is;

A) System.out.println(is instanceof List);
B) System.out.println(obj instanceof List l && l.size() > 2);
C) System.out.println(obj instanceof List<String> ls);
D) System.out.println(is instanceof Collection<? extends CharSequence> cs);
E) System.out.println(is instanceof List<String> ls || ls.size() > 2);

Q) Given:
  class Base {
    void doBaseStuff() { System.out.println("doBaseStuff"); }
  }

  class Sub extends Base {
    void doBaseStuff() { System.out.println("doSubStuff"); }

    void length() { System.out.println("doLengthStuff"); }
  }

    Base b = new Sub();
    ((StringBuilder) b) // line n1
        .length();      // line n2

   What is the result?
   A) doLengthStuff
   B) Exception at line n1
   C) Exception at line n2
   D) Compilation failure at line n1
   E) Compilation failure at line n2

 Q)  Given:
   static
   class Base {
     void doBaseStuff() { System.out.println("doBaseStuff"); }
   }

   static
   class Sub extends Base {
     void doBaseStuff() { System.out.println("doSubStuff"); }
     void doOtherStuff() { System.out.println("doOtherStuff"); }
   }

   public static void main(String[] args) {
     Base b = new Sub();
     ((Runnable) b).run();
   }

   What is the result?
   A) doSubStuff
   B) doOtherStuff
   C) doBaseStuff
   D) Exception at runtime
   E) Compilation failure

Q) Given:
  static String doStuff(String s) {
    s = new String("Hello");
    return s;
  }

  public static void main(String[] args) {
    String y = doStuff("Hello");
    // line n1
    System.out.println("y is " + y);
  }
 how many String objects are eligible for GC at line n1
A) 0
B) 1
C) 2
D) 3

Q) Given
  static int doStuff(String s) {
    s = new String("Hello");
    return s.length();
  }

  public static void main(String[] args) {
    int y = doStuff("Hello");
    // line n1
  }
 how many String objects are eligible for GC at line n1
A) 0
B) 1
C) 2
D) 3